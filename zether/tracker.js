// =================================
// START: Web3 deploy code
// =================================

/* beautify ignore:start */
var erc20mintableContract = web3.eth.contract([{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"value","type":"uint256"}],"name":"mint","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"account","type":"address"}],"name":"addMinter","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"renounceMinter","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"account","type":"address"}],"name":"isMinter","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"},{"name":"spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"account","type":"address"}],"name":"MinterAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"account","type":"address"}],"name":"MinterRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"}]);

var zscContract = web3.eth.contract([{"constant":false,"inputs":[{"name":"outL","type":"bytes32[2]"},{"name":"inL","type":"bytes32[2]"},{"name":"inOutR","type":"bytes32[2]"},{"name":"y","type":"bytes32[2]"},{"name":"yBar","type":"bytes32[2]"},{"name":"proof","type":"bytes"},{"name":"signature","type":"bytes32[3]"}],"name":"transfer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"ethAddrs","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"y","type":"bytes32[2]"},{"name":"bTransfer","type":"uint256"}],"name":"fund","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"},{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"name":"acc","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"ctr","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"},{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"name":"pTransfers","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"lastRollOver","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"y","type":"bytes32[2]"},{"name":"bTransfer","type":"uint256"},{"name":"proof","type":"bytes"},{"name":"signature","type":"bytes32[3]"}],"name":"burn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"domainHash","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_coin","type":"address"},{"name":"_epochLength","type":"uint256"},{"name":"_chainId","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"funder","type":"bytes32[2]"}],"name":"FundOccurred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"burner","type":"bytes32[2]"}],"name":"BurnOccurred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"sender","type":"bytes32[2]"}],"name":"TransferFrom","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"recipient","type":"bytes32[2]"}],"name":"TransferTo","type":"event"}]);
/* beautify ignore:end */

// =================================
// END: Web3 deploy code
// =================================

var _epochLength = 1; // NOTE: in real applications, this will have to be changed! just for ease of demonstration.
var _chainId = 10;

function _deployZSC(coin) {
    // =================================
    // START: Web3 deploy code
    // =================================
    var zsc = zscContract.new(
        coin,
        _epochLength,
        _chainId, {
            from: web3.eth.accounts[0],
            data: '0x60806040526040516200001290620001a8565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b50600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006004553480156200008257600080fd5b506040516060806200297683398101806040526060811015620000a457600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160018190555060006040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81527fc9d54de6bfed12ed581fc7d2c1ae5f8778aaf7c177d117fdbb15c71c94be6f8860208201527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885604082015282606082015230608082015260a081209150508060028190555050505050620001b6565b610551806200242583390190565b61225f80620001c66000396000f3fe608060405234801561001057600080fd5b50600436106100b0576000357c01000000000000000000000000000000000000000000000000000000009004806373edb37b1161008357806373edb37b1461026757806380a25373146102a9578063b1537596146102ff578063ba90919114610341578063dfe86ac5146103d8576100b0565b8063151c4d8d146100b557806342b30cd61461016b5780635464befb146101d95780635b7f82f414610211575b600080fd5b61016960048036036101c08110156100cc57600080fd5b8101908080604001909192919290806040019091929192908060400190919291929080604001909192919290806040019091929192908035906020019064010000000081111561011b57600080fd5b82018360208201111561012d57600080fd5b8035906020019184600183028401116401000000008311171561014f57600080fd5b9091929391929390806060019091929192905050506103f6565b005b6101976004803603602081101561018157600080fd5b8101908080359060200190929190505050610b49565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61020f600480360360608110156101ef57600080fd5b810190808060400190919291929080359060200190929190505050610b7c565b005b6102516004803603606081101561022757600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050611070565b6040518082815260200191505060405180910390f35b6102936004803603602081101561027d57600080fd5b81019080803590602001909291905050506110a9565b6040518082815260200191505060405180910390f35b6102e9600480360360608110156102bf57600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506110c1565b6040518082815260200191505060405180910390f35b61032b6004803603602081101561031557600080fd5b81019080803590602001909291905050506110fa565b6040518082815260200191505060405180910390f35b6103d6600480360360e081101561035757600080fd5b8101908080604001909192919290803590602001909291908035906020019064010000000081111561038857600080fd5b82018360208201111561039a57600080fd5b803590602001918460018302840111640100000000831117156103bc57600080fd5b909192939192939080606001909192919290505050611112565b005b6103e061170e565b6040518082815260200191505060405180910390f35b60008560405160200180826002602002808284378083019250505091505060405160208183030381529060405280519060200120905061043581611714565b60008560405160200180826002602002808284378083019250505091505060405160208183030381529060405280519060200120905061047481611714565b61047c612002565b60056000848152602001908152602001600020600280602002604051908101604052809291906000905b828210156104ff578382600202016002806020026040519081016040528092919082600280156104eb576020028201915b8154815260200190600101908083116104d7575b5050505050815260200190600101906104a6565b5050505090506001604051825151815260208351015160208201526040600460408301377f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000060808201526040808201606060408401600060075af18216915060408351608083600060065af1821691506020830151518152602080840151015160208201526040608460408301377f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000060808201526040808201606060408401600060075af18216915060406020840151608083600060065af1821691508115156105e857600080fd5b5050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ea59a87f82600060028110151561063757fe5b602002015183600160028110151561064b57fe5b60200201518e8e8e8e8e8e8e6040518a63ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808a600260200280838360005b838110156106ad578082015181840152602081019050610692565b5050505090500189600260200280838360005b838110156106db5780820151818401526020810190506106c0565b5050505090500188600260200280828437600081840152601f19601f82011690508083019250505087600260200280828437600081840152601f19601f82011690508083019250505086600260200280828437600081840152601f19601f82011690508083019250505085600260200280828437600081840152601f19601f82011690508083019250505084600260200280828437600081840152601f19601f820116905080830192505050806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509a505050505050505050505060206040518083038186803b1580156107da57600080fd5b505afa1580156107ee573d6000803e3d6000fd5b505050506040513d602081101561080457600080fd5b81019080805190602001909291905050505061093783886002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508c6002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508e6002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508d6002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050896003806020026040519081016040528092919082600360200280828437600081840152601f19601f820116905080830192505050505050611a65565b8060056000858152602001908152602001600020906002610959929190612030565b5060066000838152602001908152602001600020600280602002604051908101604052809291906000905b828210156109dd578382600202016002806020026040519081016040528092919082600280156109c9576020028201915b8154815260200190600101908083116109b5575b505050505081526020019060010190610984565b50505050905060016040518251518152602083510151602082015260406044604083013760408351608083600060065af18216915060208301515181526020808401510151602082015260406084604083013760406020840151608083600060065af182169150811515610a5057600080fd5b50508060066000848152602001908152602001600020906002610a74929190612030565b5060096000848152602001908152602001600020600081548092919060010191905055507fbd24f8f2c91e1635142f713e573e2d57ca34de67e93613c543acfb868d3ae9c4886040518082600260200280828437600081840152601f19601f82011690508083019250505091505060405180910390a17f24ddbd5390bd6a99a153e5c6d7c0df7b25a9f9ae98ef0ebf4389afa1008468df876040518082600260200280828437600081840152601f19601f82011690508083019250505091505060405180910390a15050505050505050505050565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600082604051602001808260026020028082843780830192505050915050604051602081830303815290604052805190602001209050610bbb81611714565b6401000000006004548301101515610c1e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806121e56028913960400191505060405180910390fd5b600060096000838152602001908152602001600020541415610ca657336007600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160096000838152602001908152602001600020819055505b610cae612002565b60408051908101604052806040805190810160405280600060010281526020016000600102815250815260200160408051908101604052806000600102815260200160006001028152508152509050604051600181526002602082015283604082015260408251606083600060075af11515610d2957600080fd5b50600660008381526020019081526020016000206000600281101515610d4b57fe5b60020201600280602002604051908101604052809291908260028015610d86576020028201915b815481526020019060010190808311610d72575b5050505050816001600281101515610d9a57fe5b60200201819052506040518151518152602082510151602082015260208201515160408201526020808301510151606082015260408251608083600060065af11515610de557600080fd5b50806000600281101515610df557fe5b6020020151600660008481526020019081526020016000206000600281101515610e1b57fe5b60020201906002610e2d929190612080565b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd6007600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610f5957600080fd5b505af1158015610f6d573d6000803e3d6000fd5b505050506040513d6020811015610f8357600080fd5b81019080805190602001909291905050501515611008576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f5472616e736665722066726f6d2073656e646572206661696c6564000000000081525060200191505060405180910390fd5b826004600082825401925050819055507fee09cc7fa61426187b532bb1fee93c0642109da02bcd9cfae5525c1df14ded96846040518082600260200280828437600081840152601f19601f82011690508083019250505091505060405180910390a150505050565b60056020528260005260406000208260028110151561108b57fe5b600202018160028110151561109c57fe5b0160009250925050505481565b60096020528060005260406000206000915090505481565b6006602052826000526040600020826002811015156110dc57fe5b60020201816002811015156110ed57fe5b0160009250925050505481565b60086020528060005260406000206000915090505481565b60008560405160200180826002602002808284378083019250505091505060405160208183030381529060405280519060200120905061115181611714565b84600011158015611166575064010000000085105b15156111da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5472616e7366657220616d6f756e74206f7574206f662072616e67650000000081525060200191505060405180910390fd5b6111e2612002565b60056000838152602001908152602001600020600280602002604051908101604052809291906000905b8282101561126557838260020201600280602002604051908101604052809291908260028015611251576020028201915b81548152602001906001019080831161123d575b50505050508152602001906001019061120c565b5050505090506001604051825151815260208351015160208201526001604082015260026060820152877f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000010360808201526040808201606060408401600060075af18216915060408351608083600060065af1821691508115156112e857600080fd5b5050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f43fd09c82600060028110151561133757fe5b602002015183600160028110151561134b57fe5b60200201518a8a8a8a6040518763ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018087600260200280838360005b838110156113aa57808201518184015260208101905061138f565b5050505090500186600260200280838360005b838110156113d85780820151818401526020810190506113bd565b5050505090500185600260200280828437600081840152601f19601f820116905080830192505050848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505097505050505050505060206040518083038186803b15801561145657600080fd5b505afa15801561146a573d6000803e3d6000fd5b505050506040513d602081101561148057600080fd5b8101908080519060200190929190505050506114d48287856003806020026040519081016040528092919082600360200280828437600081840152601f19601f820116905080830192505050505050611d6c565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6007600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16886040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156115cb57600080fd5b505af11580156115df573d6000803e3d6000fd5b505050506040513d60208110156115f557600080fd5b8101908080519060200190929190505050151561165d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806121b16034913960400191505060405180910390fd5b806005600084815260200190815260200160002090600261167f929190612030565b506009600083815260200190815260200160002060008154809291906001019190505550856004600082825403925050819055507fc4f538d91f144975b9e9d73db4fb5881b5373593b10c8d16c02546accae806f0876040518082600260200280828437600081840152601f19601f82011690508083019250505091505060405180910390a150505050505050565b60025481565b60006001544381151561172357fe5b0490508060086000848152602001908152602001600020541015611a61576117496120c0565b60806040519081016040528060056000868152602001908152602001600020600060028110151561177657fe5b600202016002806020026040519081016040528092919082600280156117b1576020028201915b81548152602001906001019080831161179d575b505050505081526020016006600086815260200190815260200160002060006002811015156117dc57fe5b60020201600280602002604051908101604052809291908260028015611817576020028201915b815481526020019060010190808311611803575b5050505050815260200160056000868152602001908152602001600020600160028110151561184257fe5b6002020160028060200260405190810160405280929190826002801561187d576020028201915b815481526020019060010190808311611869575b505050505081526020016006600086815260200190815260200160002060016002811015156118a857fe5b600202016002806020026040519081016040528092919082600280156118e3576020028201915b8154815260200190600101908083116118cf575b5050505050815250905060016040518251518152602083510151602082015260208301515160408201526020808401510151606082015260408351608083600060065af1821691506040830151518152602060408401510151602082015260608301515160408201526020606084015101516060820152604080840151608083600060065af18216915081151561197957600080fd5b5050604080519081016040528082600060048110151561199557fe5b602002015181526020018260026004811015156119ae57fe5b6020020151815250600560008581526020019081526020016000209060026119d7929190612030565b50604080519081016040528060408051908101604052806000600102815260200160006001028152508152602001604080519081016040528060006001028152602001600060010281525081525060066000858152602001908152602001600020906002611a46929190612030565b50816008600085815260200190815260200160002081905550505b5050565b60006002549050600080600960008a815260200190815260200160002054905060606040805190810160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250905060405161190181528460208201527fa749c2b2aa979f63aed9ba228701786d8f263ff542fe87003a0ec711252431fe60408201528951606082015260208a0151608082015260406060820120606082015287516080820152602088015160a0820152604060808201206080820152885160a0820152602089015160c0820152604060a082012060a0820152865160c0820152602087015160e0820152604060c082012060c08201528260e082015260c0604082012060408201526042601e8201209350506000600182856040516020018083805190602001908083835b602083101515611bc15780518252602082019150602081019050602083039250611b9c565b6001836020036101000a0380198251168184511680821785525050505050509050018281526020019250505060405160208183030381529060405280519060200120876000600381101515611c1257fe5b602002015160019004886001600381101515611c2a57fe5b6020020151896002600381101515611c3e57fe5b602002015160405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611c9a573d6000803e3d6000fd5b505050602060405103519050600760008c815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611d5f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018061220d6027913960400191505060405180910390fd5b5050505050505050505050565b600060025490506000806009600087815260200190815260200160002054905060606040805190810160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250905060405161190181528460208201527f9d72b69945fb58354dfc76c7c1408fc89879b343a0105554190526fc4171d45560408201528660608201528260808201526060604082012060408201526042601e8201209350506000600182856040516020018083805190602001908083835b602083101515611e5a5780518252602082019150602081019050602083039250611e35565b6001836020036101000a0380198251168184511680821785525050505050509050018281526020019250505060405160208183030381529060405280519060200120876000600381101515611eab57fe5b602002015160019004886001600381101515611ec357fe5b6020020151896002600381101515611ed757fe5b602002015160405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611f33573d6000803e3d6000fd5b5050506020604051035190506007600089815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611ff8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018061220d6027913960400191505060405180910390fd5b5050505050505050565b6080604051908101604052806002905b61201a6120ef565b8152602001906001900390816120125790505090565b8260028002810192821561206f579160200282015b8281111561206e5782518290600261205e929190612111565b5091602001919060020190612045565b5b50905061207c9190612151565b5090565b82600281019282156120af579160200282015b828111156120ae578251825591602001919060010190612093565b5b5090506120bc919061217d565b5090565b610100604051908101604052806004905b6120d96120ef565b8152602001906001900390816120d15790505090565b6040805190810160405280600290602082028038833980820191505090505090565b8260028101928215612140579160200282015b8281111561213f578251825591602001919060010190612124565b5b50905061214d919061217d565b5090565b61217a91905b80821115612176576000818161216d91906121a2565b50600201612157565b5090565b90565b61219f91905b8082111561219b576000816000905550600101612183565b5090565b90565b50600081556001016000905556fe546869732073686f756c646e2774206661696c2e2e2e20536f6d657468696e672077656e74207365766572656c792077726f6e6746756e642070757368657320636f6e74726163742070617374206d6178696d756d2076616c75652e5369676e617475726520696e76616c6964206f7220666f722077726f6e6720616464726573732ea165627a7a72305820e8ebba128fafcbd6912228081d5599adc24c4d7ba2d8562cc807cc660e95eaf00029608060405260096000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561009357600080fd5b506104ae806100a36000396000f3fe608060405234801561001057600080fd5b5060043610610053576000357c010000000000000000000000000000000000000000000000000000000090048063ea59a87f14610058578063f43fd09c14610130575b600080fd5b61011660048036036101e081101561006f57600080fd5b8101908080604001909192919290806040019091929192908060400190919291929080604001909192919290806040019091929192908060400190919291929080604001909192919290803590602001906401000000008111156100d257600080fd5b8201836020820111156100e457600080fd5b8035906020019184600183028401116401000000008311171561010657600080fd5b90919293919293905050506101ea565b604051808215151515815260200191505060405180910390f35b6101d0600480360361010081101561014757600080fd5b81019080806040019091929192908060400190919291929080604001909192919290803590602001909291908035906020019064010000000081111561018c57600080fd5b82018360208201111561019e57600080fd5b803590602001918460018302840111640100000000831117156101c057600080fd5b909192939192939050505061029f565b604051808215151515815260200191505060405180910390f35b60008060606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600036604051808383808284378083019250505092505050600060405180830381855afa9150503d806000811461027a576040519150601f19603f3d011682016040523d82523d6000602084013e61027f565b606091505b509150915061028e8282610352565b925050509998505050505050505050565b6000806060600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600036604051808383808284378083019250505092505050600060405180830381855afa9150503d8060008114610330576040519150601f19603f3d011682016040523d82523d6000602084013e610335565b606091505b50915091506103448282610352565b925050509695505050505050565b6000821515610364576000905061047c565b600082600081518110151561037557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002905060007f010000000000000000000000000000000000000000000000000000000000000002817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561041957600091505061047c565b60017f010000000000000000000000000000000000000000000000000000000000000002817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561047057600191505061047c565b6000151561047a57fe5b505b9291505056fea165627a7a7230582040b1e086627e9231cb3a909414ef74184cfa57ce8a3853bca1878a13f37b56fb0029',
            gas: '4700000'
        },
        function(e, contract) {
            if (typeof contract.address !== 'undefined') {
                console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
            }
        })
    // =================================
    // END: Web3 deploy code
    // =================================
    return zsc;
}

function _recoverZSC(address) {
    var zsc = zscContract.at(address);
    return zsc;
}

var demo = (function() {
    return {
        deployZSC: function(coin) {
            return _deployZSC(coin);
        },
        recoverZSC: function(address) {
            return _recoverZSC(address);
        },
    };
})();


function tracker(zsc) {
    this.zsc = zsc;
    this.keypair = zether.createAccount();
    this.balance = 0; // reflects WOULD-BE value in acc (i.e., if rollOver were called). don't touch this manually
    // only had to make this public so that it could be modified by callbacks. don't change it yourself!

    var yHash = web3.sha3(this.keypair['y'][0].slice(2) + this.keypair['y'][1].slice(2), { encoding: 'hex' });
    var that = this;

    zsc.TransferTo(function(error, event) { // automatically watch for incoming transfers
        if (error) {
            console.log("Error: " + error);
        } else {
            if (that.mine(event.args['recipient'])) {
                console.log("Transfer received! New balance is " + that.peek() + ".");
            }
        }
    });

    // these sign functions are specialized and ad-hoc. todo: implement general EIP-712.
    var signTransfer = function(yBar, outL, inL, inOutR) {
        var domainHash = that.zsc.domainHash().slice(2)
        var typeHash = 'a749c2b2aa979f63aed9ba228701786d8f263ff542fe87003a0ec711252431fe' // keccak256 hash of "ZETHER_TRANSFER_SIGNATURE(bytes32[2] yBar,bytes32[2] inL,bytes32[2] outL, bytes32[2] inOutR,uint256 count)"
        var yBarHash = web3.sha3(yBar[0].slice(2) + yBar[1].slice(2), { encoding: 'hex' }).slice(2)
        var outLHash = web3.sha3(outL[0].slice(2) + outL[1].slice(2), { encoding: 'hex' }).slice(2)
        var inLHash = web3.sha3(inL[0].slice(2) + inL[1].slice(2), { encoding: 'hex' }).slice(2)
        var inOutRHash = web3.sha3(inOutR[0].slice(2) + inOutR[1].slice(2), { encoding: 'hex' }).slice(2)
        var count = web3.padLeft(web3.toHex(that.zsc.ctr(yHash)).slice(2), 64)
        var hashStruct = web3.sha3(typeHash + yBarHash + outLHash + inLHash + inOutRHash + count, { encoding: 'hex' }).slice(2)
        var message = web3.sha3("1901" + domainHash + hashStruct, { encoding: 'hex' })
        var signature = web3.eth.sign(eth.accounts[0], message).slice(2)
        return ["0x00000000000000000000000000000000000000000000000000000000000000" + signature.slice(128), "0x" + signature.slice(0, 64), "0x" + signature.slice(64, 128)]
    }

    var signBurn = function(value) {
        var domainHash = that.zsc.domainHash().slice(2)
        var typeHash = '9d72b69945fb58354dfc76c7c1408fc89879b343a0105554190526fc4171d455' // keccak256 hash of "ZETHER_BURN_SIGNATURE(uint256 bTransfer,uint256 count)"
        var value = web3.padLeft(web3.toHex(value).slice(2), 64)
        var count = web3.padLeft(web3.toHex(that.zsc.ctr(yHash)).slice(2), 64)
        var hashStruct = web3.sha3(typeHash + value + count, { encoding: 'hex' }).slice(2)
        var message = web3.sha3("1901" + domainHash + hashStruct, { encoding: 'hex' })
        var signature = web3.eth.sign(eth.accounts[0], message).slice(2)
        return ["0x00000000000000000000000000000000000000000000000000000000000000" + signature.slice(128), "0x" + signature.slice(0, 64), "0x" + signature.slice(64, 128)]
    }

    var rollOver = function() { // private method. should actually maybe called "synchronize"
        var acc = [
            [that.zsc.acc(yHash, 0, 0), that.zsc.acc(yHash, 0, 1)],
            [that.zsc.acc(yHash, 1, 0), that.zsc.acc(yHash, 1, 1)]
        ];
        if (this.zsc.lastRollOver(yHash) < Math.floor(eth.blockNumber / _epochLength)) {
            var pTransfers = [
                [that.zsc.pTransfers(yHash, 0, 0), that.zsc.pTransfers(yHash, 0, 1)],
                [that.zsc.pTransfers(yHash, 1, 0), that.zsc.pTransfers(yHash, 1, 1)]
            ];
            acc = [zether.add(acc[0], pTransfers[0]), zether.add(acc[1], pTransfers[1])];
        }
        that.balance = zether.readBalance(acc[0], acc[1], that.keypair.x, that.balance, that.balance + 100000) // hardcoded range...?
        return acc;
    }

    this.me = function() {
        return this.keypair.y
    }

    this.mine = function(address) {
        return address[0] == this.keypair['y'][0] && address[1] == this.keypair['y'][1];
    }

    this.peek = function() { // read-only, incorporates not-yet-rolled-over receipts.
        var acc = [
            [this.zsc.acc(yHash, 0, 0), this.zsc.acc(yHash, 0, 1)],
            [this.zsc.acc(yHash, 1, 0), this.zsc.acc(yHash, 1, 1)]
        ];
        var pTransfers = [
            [this.zsc.pTransfers(yHash, 0, 0), this.zsc.pTransfers(yHash, 0, 1)],
            [this.zsc.pTransfers(yHash, 1, 0), this.zsc.pTransfers(yHash, 1, 1)]
        ];
        var result = [zether.add(acc[0], pTransfers[0]), zether.add(acc[1], pTransfers[1])];
        return zether.readBalance(result[0], result[1], this.keypair['x'], this.balance, this.balance + 100000) // hardcoded range...?
    }

    this.deposit = function(value) {
        var peek = this.peek();
        var events = this.zsc.FundOccurred();
        events.watch(function(error, event) {
            if (error) {
                console.log("Error: " + error);
            } else {
                if (that.mine(event.args['funder'])) {
                    console.log("Deposit of " + value + " was successful. Balance is now " + (peek + value) + ".");
                    events.stopWatching();
                }
            }
        });

        this.zsc.fund(this.keypair['y'], value, { from: eth.accounts[0], gas: 5470000 })
        return "Initiating deposit."
    }

    this.transfer = function(yBar, value) {
        acc = rollOver();
        var peek = this.peek();
        // if (value > this.balance) {
        //     if (value > peek) {
        //         throw "Requested transfer amount of " + value + " exceeds available balance of " + peek + ", even incorporating future rollovers."
        //     } else {
        //         throw "Transfer amount of " + value + " exceeds presently available balance of " + this.balance + ". Please wait until the next rollover, after which you'll have " + peek + " available."
        //     }
        // }
        var proof = zether.proveTransfer(acc[0], acc[1], this.keypair['y'], yBar, this.keypair['x'], value, this.balance - value);
        var signature = signTransfer(yBar, proof['outL'], proof['inL'], proof['inOutR'])
        var events = this.zsc.TransferFrom();
        events.watch(function(error, event) {
            if (error) {
                console.log("Error: " + error);
            } else {
                if (that.mine(event.args['sender'])) {
                    that.balance -= value;
                    console.log("Transfer of " + value + " was successful. Balance now " + (peek - value) + ".");
                    events.stopWatching();
                }
            }
        });

        this.zsc.transfer(proof['outL'], proof['inL'], proof['inOutR'], this.keypair['y'], yBar, proof['proof'], signature, { from: eth.accounts[0], gas: 5470000 })
        return "Initiating transfer."
    }

    this.withdraw = function(value) {
        acc = rollOver();
        var peek = this.peek();
        if (value > this.balance) {
            if (value > peek) {
                throw "Requested transfer amount of " + value + " exceeds available balance of " + peek + ", even incorporating future rollovers."
            } else {
                throw "Withdrawal amount of " + value + " exceeds presently available balance of " + this.balance + ". Please wait until the next rollover, after which you'll have " + peek + " available."
            }
        }
        var proof = zether.proveBurn(acc[0], acc[1], this.keypair['y'], value, this.keypair['x'], this.balance - value);
        var signature = signBurn(value)
        var events = this.zsc.BurnOccurred();
        events.watch(function(error, event) {
            if (error) {
                console.log("Error: " + error);
            } else {
                if (that.mine(event.args['burner'])) {
                    that.balance -= value;
                    console.log("Withdrawal of " + value + " was successful. Balance now " + (peek - value) + ".");
                    events.stopWatching();
                }
            }
        });

        this.zsc.burn(this.keypair['y'], value, proof, signature, { from: eth.accounts[0], gas: 5470000 })
        return "Initiating withdrawal."
    }

    this.zsc.fund(this.keypair['y'], 0, { from: eth.accounts[0], gas: 5470000 }) // dummy "registration" deposit
}
